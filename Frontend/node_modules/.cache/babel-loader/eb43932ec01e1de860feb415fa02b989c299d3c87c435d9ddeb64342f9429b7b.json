{"ast":null,"code":"// import React from 'react'\n// import { Link, useNavigate } from 'react-router-dom'\n\n// import toast, { Toaster } from 'react-hot-toast';\n// import { useFormik } from 'formik';\n// import { passwordValidate } from '../helper/validate'\n// import useFetch from '../hooks/fetch.hook';\n// import { useAuthStore } from '../store/store'\n// import { verifyPassword } from '../helper/helper'\n// import styles from '../styles/Username.module.css';\n\n// export default function Password() {\n\n//   // const navigate = useNavigate()\n//   // const { username } = useAuthStore(state => state.auth)\n//   // const [{ isLoading, apiData, serverError }] = useFetch(`/user/${username}`)\n\n//   const formik = useFormik({\n//     initialValues : {\n//       password : 'admin@123'\n//     },\n//     validate : passwordValidate,\n//     validateOnBlur: false,\n//     validateOnChange: false,\n//     onSubmit : async values => {\n\n//       let loginPromise = verifyPassword({ username, password : values.password })\n//       toast.promise(loginPromise, {\n//         loading: 'Checking...',\n//         success : <b>Login Successfully...!</b>,\n//         error : <b>Password Not Match!</b>\n//       });\n\n//       loginPromise.then(res => {\n//         let { token } = res.data;\n//         localStorage.setItem('token', token);\n//         navigate('/profile')\n//       })\n//     }\n//   })\n\n//   // if(isLoading) return <h1 className='text-2xl font-bold'>isLoading</h1>;\n//   // if(serverError) return <h1 className='text-xl text-red-500'>{serverError.message}</h1>\n\n//   return (\n//     <div className=\"container mx-auto\">\n\n//       <Toaster position='top-center' reverseOrder={false}></Toaster>\n\n//       <div className='flex justify-center items-center h-screen'>\n//         <div className={styles.glass}>\n\n//           <div className=\"title flex flex-col items-center\">\n//             <h4 className='text-5xl font-bold'>Hello {apiData?.firstName || apiData?.username}</h4>\n//             <span className='py-4 text-xl w-2/3 text-center text-gray-500'>\n//               Explore More by connecting with us.\n//             </span>\n//           </div>\n\n//           <form className='py-1' onSubmit={formik.handleSubmit}>\n//               <div className=\"textbox flex flex-col items-center gap-6\">\n//                   <input {...formik.getFieldProps('password')} className={styles.textbox} type=\"text\" placeholder='Password' />\n//                   <button className={styles.btn} type='submit'>Sign In</button>\n//               </div>\n\n//               <div className=\"text-center py-4\">\n//                 <span className='text-gray-500'>Forgot Password? <Link className='text-red-500' to=\"/recovery\">Recover Now</Link></span>\n//               </div>\n\n//           </form>\n\n//         </div>\n//       </div>\n//     </div>\n//   )\n// }","map":{"version":3,"names":[],"sources":["D:/Internship/copyOfloginapp/client/src/components/Password.js"],"sourcesContent":["// import React from 'react'\r\n// import { Link, useNavigate } from 'react-router-dom'\r\n\r\n// import toast, { Toaster } from 'react-hot-toast';\r\n// import { useFormik } from 'formik';\r\n// import { passwordValidate } from '../helper/validate'\r\n// import useFetch from '../hooks/fetch.hook';\r\n// import { useAuthStore } from '../store/store'\r\n// import { verifyPassword } from '../helper/helper'\r\n// import styles from '../styles/Username.module.css';\r\n\r\n// export default function Password() {\r\n\r\n//   // const navigate = useNavigate()\r\n//   // const { username } = useAuthStore(state => state.auth)\r\n//   // const [{ isLoading, apiData, serverError }] = useFetch(`/user/${username}`)\r\n\r\n//   const formik = useFormik({\r\n//     initialValues : {\r\n//       password : 'admin@123'\r\n//     },\r\n//     validate : passwordValidate,\r\n//     validateOnBlur: false,\r\n//     validateOnChange: false,\r\n//     onSubmit : async values => {\r\n      \r\n//       let loginPromise = verifyPassword({ username, password : values.password })\r\n//       toast.promise(loginPromise, {\r\n//         loading: 'Checking...',\r\n//         success : <b>Login Successfully...!</b>,\r\n//         error : <b>Password Not Match!</b>\r\n//       });\r\n\r\n//       loginPromise.then(res => {\r\n//         let { token } = res.data;\r\n//         localStorage.setItem('token', token);\r\n//         navigate('/profile')\r\n//       })\r\n//     }\r\n//   })\r\n\r\n//   // if(isLoading) return <h1 className='text-2xl font-bold'>isLoading</h1>;\r\n//   // if(serverError) return <h1 className='text-xl text-red-500'>{serverError.message}</h1>\r\n\r\n//   return (\r\n//     <div className=\"container mx-auto\">\r\n\r\n//       <Toaster position='top-center' reverseOrder={false}></Toaster>\r\n\r\n//       <div className='flex justify-center items-center h-screen'>\r\n//         <div className={styles.glass}>\r\n\r\n//           <div className=\"title flex flex-col items-center\">\r\n//             <h4 className='text-5xl font-bold'>Hello {apiData?.firstName || apiData?.username}</h4>\r\n//             <span className='py-4 text-xl w-2/3 text-center text-gray-500'>\r\n//               Explore More by connecting with us.\r\n//             </span>\r\n//           </div>\r\n\r\n//           <form className='py-1' onSubmit={formik.handleSubmit}>\r\n//               <div className=\"textbox flex flex-col items-center gap-6\">\r\n//                   <input {...formik.getFieldProps('password')} className={styles.textbox} type=\"text\" placeholder='Password' />\r\n//                   <button className={styles.btn} type='submit'>Sign In</button>\r\n//               </div>\r\n\r\n//               <div className=\"text-center py-4\">\r\n//                 <span className='text-gray-500'>Forgot Password? <Link className='text-red-500' to=\"/recovery\">Recover Now</Link></span>\r\n//               </div>\r\n\r\n//           </form>\r\n\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   )\r\n// }"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}