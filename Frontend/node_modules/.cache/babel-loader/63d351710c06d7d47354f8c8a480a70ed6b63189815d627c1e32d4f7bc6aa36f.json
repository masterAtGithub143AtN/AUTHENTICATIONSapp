{"ast":null,"code":"import toast from 'react-hot-toast';\n\n/* validate username */\n/* validate login page username */\n\nexport async function usernameValidate(values) {\n  const errors = usernameVerify({}, values);\n  return errors;\n}\n\n/** validate password */\n\nfunction passwordVerify(errors = {}, values) {\n  if (!values.password) {\n    errors.password = toast.error(\"Password Required..!\");\n  } else if (values.password.includes(\" \")) {\n    errors.password = toast.error(\"wrong Password...!\");\n  } else if (values.password.length < 4) {\n    errors.password = toast.error(\"Password must be atleast 5 letter\");\n  } else {}\n}\nfunction usernameVerify(error = {}, values) {\n  if (!values.username) {\n    error.username = toast.error(\"Username Required\");\n  } else if (values.username.includes(\" \")) {\n    error.username = toast.error('Invalid Username...!');\n  }\n  return error;\n}","map":{"version":3,"names":["toast","usernameValidate","values","errors","usernameVerify","passwordVerify","password","error","includes","length","username"],"sources":["D:/Internship/LoginApp/client/src/helper/validate.js"],"sourcesContent":["import toast from 'react-hot-toast'\r\n\r\n\r\n/* validate username */\r\n/* validate login page username */\r\n\r\nexport async function usernameValidate(values){\r\n    const errors=usernameVerify({},values);\r\n\r\n    return errors;\r\n}\r\n\r\n/** validate password */\r\n\r\nfunction passwordVerify(errors ={},values){\r\n    if(!values.password){\r\n        errors.password=toast.error(\"Password Required..!\");\r\n    } else if(values.password.includes(\" \")){\r\n        errors.password=toast.error(\"wrong Password...!\");\r\n    }\r\n    else if(values.password.length<4){\r\n        errors.password=toast.error(\"Password must be atleast 5 letter\");\r\n        \r\n    }\r\n    else{\r\n        \r\n    }\r\n}\r\n\r\nfunction usernameVerify(error={},values){\r\n    if(!values.username){\r\n        error.username=toast.error(\"Username Required\");\r\n    }\r\n    else if(values.username.includes(\" \")){\r\n        error.username=toast.error('Invalid Username...!')\r\n    }\r\n    return error;\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,iBAAiB;;AAGnC;AACA;;AAEA,OAAO,eAAeC,gBAAgBA,CAACC,MAAM,EAAC;EAC1C,MAAMC,MAAM,GAACC,cAAc,CAAC,CAAC,CAAC,EAACF,MAAM,CAAC;EAEtC,OAAOC,MAAM;AACjB;;AAEA;;AAEA,SAASE,cAAcA,CAACF,MAAM,GAAE,CAAC,CAAC,EAACD,MAAM,EAAC;EACtC,IAAG,CAACA,MAAM,CAACI,QAAQ,EAAC;IAChBH,MAAM,CAACG,QAAQ,GAACN,KAAK,CAACO,KAAK,CAAC,sBAAsB,CAAC;EACvD,CAAC,MAAM,IAAGL,MAAM,CAACI,QAAQ,CAACE,QAAQ,CAAC,GAAG,CAAC,EAAC;IACpCL,MAAM,CAACG,QAAQ,GAACN,KAAK,CAACO,KAAK,CAAC,oBAAoB,CAAC;EACrD,CAAC,MACI,IAAGL,MAAM,CAACI,QAAQ,CAACG,MAAM,GAAC,CAAC,EAAC;IAC7BN,MAAM,CAACG,QAAQ,GAACN,KAAK,CAACO,KAAK,CAAC,mCAAmC,CAAC;EAEpE,CAAC,MACG,CAEJ;AACJ;AAEA,SAASH,cAAcA,CAACG,KAAK,GAAC,CAAC,CAAC,EAACL,MAAM,EAAC;EACpC,IAAG,CAACA,MAAM,CAACQ,QAAQ,EAAC;IAChBH,KAAK,CAACG,QAAQ,GAACV,KAAK,CAACO,KAAK,CAAC,mBAAmB,CAAC;EACnD,CAAC,MACI,IAAGL,MAAM,CAACQ,QAAQ,CAACF,QAAQ,CAAC,GAAG,CAAC,EAAC;IAClCD,KAAK,CAACG,QAAQ,GAACV,KAAK,CAACO,KAAK,CAAC,sBAAsB,CAAC;EACtD;EACA,OAAOA,KAAK;AAChB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}